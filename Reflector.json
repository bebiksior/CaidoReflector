{
  "description": "Automatically look for paramater reflections in the HTTP response",
  "edition": 2,
  "graph": {
    "edges": [
      {
        "source": {
          "exec_alias": "exec",
          "node_id": 3
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 4
        }
      },
      {
        "source": {
          "exec_alias": "exec",
          "node_id": 4
        },
        "target": {
          "exec_alias": "exec",
          "node_id": 1
        }
      }
    ],
    "nodes": [
      {
        "alias": "passive_end",
        "definition_id": "caido/passive-end",
        "display": {
          "x": 0,
          "y": 300
        },
        "id": 1,
        "inputs": [],
        "name": "Passive End",
        "version": "0.1.0"
      },
      {
        "alias": "on_intercept_response",
        "definition_id": "caido/on-intercept-response",
        "display": {
          "x": 0,
          "y": -40
        },
        "id": 3,
        "inputs": [],
        "name": "On Intercept Response",
        "version": "0.1.0"
      },
      {
        "alias": "javascript",
        "definition_id": "caido/http-code-js",
        "display": {
          "x": 0,
          "y": 130
        },
        "id": 4,
        "inputs": [
          {
            "alias": "request",
            "value": {
              "data": "$on_intercept_response.request",
              "kind": "ref"
            }
          },
          {
            "alias": "response",
            "value": {
              "data": "$on_intercept_response.response",
              "kind": "ref"
            }
          },
          {
            "alias": "code",
            "value": {
              "data": "async function R(G,j){const{request:F,response:K}=G;if(!F||!K){j.console.log(\"Skipping scan - request or response is missing\");return}const J=K.getHeader(\"Content-Type\");if(!J||!J.toString().includes(\"text/html\"))return j.console.log(\"Skipping scan - response is not HTML\"),[];const L=F.getMethod();if(L!==\"GET\"&&L!==\"POST\"){j.console.log(\"Skipping scan - request method is not GET or POST\");return}for(let U of A)if(F.getHost().includes(U)){j.console.log(\"Skipping scan - common analytics URL\");return}for(let U of I)if(F.getPath().includes(U)){j.console.log(\"Skipping scan - common analytics URL\");return}j.console.log(\"=====================================\");const z=await N(G,j);if(z.length>0){j.console.log(`Found ${z.length} reflected parameter(s)`);let U=\"The following parameters were reflected in the response:\\n\";U+=\"--------\\n\",z.forEach((Y)=>{U+=M(Y)+\"\\n\"}),j.console.log(\"Creating finding:\"),j.console.log(U),await j.findings.create({title:\"Reflected parameters\",reporter:\"Reflector\",request:F,description:U})}else j.console.log(\"No reflected parameters found\")}async function N(G,j){const{request:F,response:K}=G;if(!F||!K)return j.console.log(\"Skipping scan - request or response is missing\"),[];j.console.log(\"Checking query parameters for reflection...\");const J=B(F.toSpec()),L=[];if(J.length===0)return j.console.log(\"No query parameters found\"),L;for(let z of J){if(j.console.log(\"-------\"),j.console.log(`Checking parameter \"${z.key}\" (source: ${z.source})`),!z.value||z.value.length===0){j.console.log(`Skipping parameter \"${z.key}\" - no value provided`);continue}const U=V(K.getBody()?.toText(),z.value);if(j.console.log(`Found ${U.length} reflection(s) for \"${z.key}\"`),U.length>0){j.console.log(`Parameter \"${z.key}\" reflected in response`);const Y=await X(F.toSpec(),z,j);if(Y.matches.length>0)L.push({name:z.key,matches:Y.matches,context:Y.context,aggressive:Y.chars,source:z.source})}}return L}async function X(G,j,F){if(j.source===\"URL\"){const W=H(G.getQuery());W[j.key]=\"_REFLECTION_TEST<\\\"'\",G.setQuery(D(W))}if(j.source===\"BODY\"&&G.getBody()){const W=G.getBody()?.toText();if(!W)return{vulnerable:!1,chars:[],context:\"\",matches:[]};const Z=H(W);Z[j.key]=\"_REFLECTION_TEST<\\\"'\",G.setBody(D(Z))}F.console.log(`Sending aggressive request for parameter \"${j.key}\"`);const J=await F.requests.send(G);F.console.log(`Received response for parameter \"${j.key}\"`);const L=J.response.getBody()?.toText();if(!L)return{vulnerable:!1,chars:[],context:\"\",matches:[]};const z=V(L,\"_REFLECTION_TEST<\\\"'\");F.console.log(`${JSON.stringify(z)} matches found for payload _REFLECTION_TEST<\\\"'`);const U=[];if(z.some(([W,Z])=>{return L.slice(W,Z).includes(\"<\")}))U.push(\"<\");if(z.some(([W,Z])=>{return L.slice(W,Z).includes(\"'\")}))U.push(\"'\");if(z.some(([W,Z])=>{return L.slice(W,Z).includes('\"')}))U.push('\"');const Y=w(z,L);return F.console.log(`Aggressive result for \"${j.key}\": ${U.length}`),{vulnerable:U.length>0,chars:U,context:Y,matches:z}}var w=function(G,j){const F={OUTOFTAG:\"HTML\",INTAG:\"In Tag\",INTAGQUOTE:'In Tag Attribute (\") Value',INTAGSINGLEQUOTE:\"In Tag Attribute (') Value\",INSCRIPT:\"In Script\",INSCRIPTQUOTE:'In Script String (\")',INSCRIPTSINGLEQUOTE:\"In Script String (')\"};for(let[K,J]of G){const z=E(j).find((U)=>U.start<K&&U.end>J);if(!z)return F.OUTOFTAG;if(z.name===\"script\")if(_(j,K,J,z,'\"'))return F.INSCRIPTQUOTE;else if(_(j,K,J,z,\"'\"))return F.INSCRIPTSINGLEQUOTE;else return F.INSCRIPT;else if(_(j,K,J,z,'\"'))return F.INTAGQUOTE;else if(_(j,K,J,z,\"'\"))return F.INTAGSINGLEQUOTE;else return F.INTAG}return\"BODY\"},_=function(G,j,F,K,J){let L=!1;for(let z=K.start;z<j;z++)if(G[z]===J)L=!L;if(!L)return!1;for(let z=j;z<F;z++)if(G[z]===J)L=!L;return L},E=function(G){const j=[];let F=0;while(!0){if(F=G.indexOf(\"<\",F),F===-1)break;const K=G.indexOf(\">\",F);if(K===-1)break;const J=G.slice(F+1,K).split(\" \")[0];j.push({start:F,end:K+1,name:J}),F=K+1}return j},V=function(G,j){if(!G)return[];const F=[];let K=0;while(!0){const J=G.indexOf(j,K);if(J===-1)break;const L=J+j.length;F.push([J,L]),K=L}return F},A=[\"google-analytics.com\",\"optimizely.com\",\"intercom.io\",\"hotjar.com\",\"segment.com\",\"facebook.com\",\"sentry.io\",\"doubleclick.net\",\"adservice.google.com\",\"heapanalytics.com\",\"ping.chartbeat.net\",\"scripts.kissmetrics.com\",\"optimizely.com\",\"2.rto.microsoft.com\",\"0stats.com\",\"ucs.query.yahoo.com\",\"udc.yahoo.com\",\"shavar.services.mozilla.com\",\"download.mozilla.org\",\"services.addons.mozilla.org\",\"classify-client.services.mozilla.com\",\"location.services.mozilla.com\",\"download-stats.mozilla.org\",\"firefox.settings.services.mozilla.com\",\"firefox-settings-attachments.cdn.mozilla.net\",\"detectportal.firefox.com\",\"versioncheck.addons.mozilla.org\",\"aus5.mozilla.org\",\"incoming.telemetry.mozilla.org\",\"fhr.cdn.mozilla.net\",\"analytics.tiktok.com\",\"mssdk-va.tiktok.com\"],I=[\"/socket.io/\"],M=(G)=>{const{name:j,matches:F,context:K,aggressive:J,source:L}=G;let z=`${j} - reflected ${F.length} time(s)`;if(K)z+=` in ${K}`;if(J)z+=` and allows ${J.join(\" \")} characters`;if(L)z+=` (source: ${L})`;return z},B=(G)=>{const j=[];if(G.getQuery().split(\"&\").forEach((K)=>{const[J,L]=K.split(\"=\");j.push({key:J,value:L,source:\"URL\",method:G.getMethod()})}),G.getMethod()===\"POST\"&&G.getBody()){const K=G.getBody();if(!K)return j;const J=G.getHeader(\"Content-Type\");if(!J||J.length==0)return j;if(J[0].includes(\"application/x-www-form-urlencoded\"))K.toText().split(\"&\").forEach((z)=>{const[U,Y]=z.split(\"=\");j.push({key:U,value:Y,source:\"BODY\",method:G.getMethod()})})}return j},D=(G)=>{return Object.entries(G).map(([j,F])=>`${j}=${F}`).join(\"&\")},H=(G)=>{const j={};return G.split(\"&\").forEach((F)=>{const[K,J]=F.split(\"=\");j[K]=J}),j};export{R as run};\n",
              "kind": "string"
            }
          }
        ],
        "name": "Javascript",
        "version": "0.1.0"
      }
    ]
  },
  "id": "50d5cd66-84b7-4f42-a639-778aca751a3b",
  "kind": "passive",
  "name": "Reflector"
}